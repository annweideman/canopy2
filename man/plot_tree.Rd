% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_tree.R
\name{plot_tree}
\alias{plot_tree}
\title{Plot phylogenetic tree}
\usage{
plot_tree(
  tree,
  annovar = NULL,
  save.muts = F,
  save.plot = F,
  outpath = NULL,
  filename = NULL,
  ...
)
}
\arguments{
\item{tree}{an object of class \code{pyhlo} representing the phylogenetic
tree.}
}
\value{
Automatically plots the tree to the graphics device and outputs a matrix
of clusters of mutations that fall along the tree branches.
}
\description{
Plot tumor phylogeny to include clonal configuration matrix, \code{Z},
cell-to-clone assignment matrix, \code{Ps}, and sample-to-clone assignment matrix,
\code{Pb}. See \bold{details} for further information.
}
\details{
The plot consists of a three-tier structure.

The first (top) component is the clonal configuration matrix, \code{Z}.
This is used to generate a tree that is arranged upright such that time runs
vertically from the root to the tips of the tree. The leftmost branch
corresponds to the population of normal cells, while the remaining branches
correspond to the mutant cells. Each red text box, other than the root,
denotes a cluster of point mutations (single-nucleotide variants).
For example, "M1: 2 SNVs" would imply that cluster M1 contains two point
mutations, perhaps mutations in genes ABC and XYZ. Finally, the tips of each
tree are labeled with the percentage of cells assigned to each subclone.

The second (middle) component is the cell-to-clone assignment matrix,
\code{Ps}. This is a binary matrix, with row sums of one, where the red ones
indicate that the  cell (row) belongs to the clone (column) and the blue
zeros indicate otherwise.

The third (bottom) component is the sample-to-clone assignment matrix,
\code{Pb}. This matrix of proportions, with row sums of one, indicates
what fraction of each bulk sample (row) belongs to each clone (column).
}
\examples{
# Simulate read counts
sims.out<-simulate_data(N=15, S=2, M=5, alpha=0.1, beta=1.0, kappa=1, tau=999,
                       Ktrue=4, b.mindepth=30, b.maxdepth=50, sc.mindepth=80,
                       sc.maxdepth=120, scale=300, seed=8675309)

N <- ncol(sims.out$Rs) # Number of cells
S <- ncol(sims.out$Rb) # Number of bulk samples
M <- nrow(sims.out$Rs) # Number of point mutations

# Generate a tree
K<-4
text = paste0(paste0(paste(paste0("(", 1:(K - 1), ","),
             collapse = ""), K), paste(rep(")", (K - 1)), collapse = ""), ";")
tree <- ape::read.tree(text = text); rm(text)

# Generate point mutations (single-nucleotide varaints) along the tree branches
tree$snv<-initialsnv(tree, rownames(sims.out$Rs))

# Get the Z matrix from tree and snv
tree$Z <- getZ(tree)

# Generate the proportion matrices
# Bulk samples
Pb<-t(DirichletReg::rdirichlet(S, alpha=rep(1/K,K)))
rownames(Pb)<-paste0('clone',1:K)
colnames(Pb)<-colnames(sims.out$Rb)

# Single cells
Ps<-stats::rmultinom(N, 1, prob = rep(1/K, K))
rownames(Ps)<-paste0('clone',1:K)
colnames(Ps)<-colnames(sims.out$Rs)
tree$Pb<-Pb; rm(Pb)
tree$Ps<-Ps; rm(Ps)

# Plot tree
plot_tree(tree)
}
