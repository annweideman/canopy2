% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_best_tree.R
\name{get_best_tree}
\alias{get_best_tree}
\title{Best Phylogenetic Tree}
\usage{
get_best_tree(
  get.trees.out,
  method = "spiegelhalter",
  save.muts = F,
  save.clones = F,
  save.plot = F,
  project = NULL,
  outpath = NULL
)
}
\arguments{
\item{get.trees.out}{sample of phylogenetic trees output from function
\code{get_trees()} of class \code{get_trees}.}

\item{method}{type of DIC used for model selection and must be
one of method \code{"spiegelhalter"} or \code{"gelman"}. Defaults to
\code{"spiegelhalter"}.}

\item{save.muts}{a logical indicating whether a text file containing all
mutations along the branches should be saved. If \code{TRUE}, must specify
\code{project} and \code{outpath}. Defaults to \code{FALSE}.}

\item{save.clones}{a logical indicating whether a text file containing the
mutations assigned to clones should be saved. If \code{TRUE}, must specify
\code{project} and \code{outpath}. Defaults to \code{FALSE}.}

\item{save.plot}{a logical indicating whether a plot of the best tree should be
saved. If \code{TRUE}, must specify \code{project} and \code{outpath}.
Defaults to \code{FALSE}.}

\item{project}{a string specifying the project name to add to the filename
for output generated from \code{save.muts} and \code{save.plot}. The final
filenames for \code{save.muts} and \code{save.plot} will be "\link{projectname}_muts.txt"
and "\link{projectname}_plot_tree.jpg," respectively.}

\item{outpath}{a string specifying the location at which to save output
generated from \code{save.muts} and \code{save.plot}.}
}
\value{
A list containing: \code{K}, a numeric corresponding to the optimal number of
subclones occurring at the minimum DIC, \code{tree}, an object of class
\code{"phylo"} representing the best phylogenetic tree corresponding to the
optimal number of subclones (K), \code{branches.muts}, a matrix containing the
names of the mutations assigned to each branch along the tree,
\code{clonals.muts}, a matrix containing the names of the mutations assigned
to each subclone, \code{posteriors}, a numeric of posteriors corresponding to
the final tree, \code{DIC}, a numeric corresponding to the minimum DIC across
all subclones, and \code{acceptance.rate}, a numeric corresponding to the MCMC
acceptance rate for the best tree.
}
\description{
Produce the optimal configuration of the phylogenetic tree by using the
deviance information criterion (DIC) computed via the
Gelman \insertCite{gelman2003}{canopy2} or Spiegelhalter
\insertCite{Spiegelhalter2002}{canopy2} definitions.
}
\details{
DIC is computed by two definitions: Gelman \insertCite{gelman2003}{canopy2}
or Spiegelhalter \insertCite{Spiegelhalter2002}{canopy2}. For both
definitions, the deviance information criterion is calculated as

\deqn{DIC = -2log(p(y|\bar{\theta}))+2p_{DIC},}

where \eqn{y} denotes the observed data and \eqn{\bar{\theta}=E(\theta|y)}
denotes the posterior mean.

In the above, \eqn{p_{DIC}} represents the effective number of parameters, which
differs in definition based on the method employed. For Gelman,
\eqn{p_{DIC, Gelman}=2\text{var}_{\text{post}}(\text{log}(p(y|\theta)))}, and for
Spiegelhalter,
\eqn{p_{DIC, Spiegel} = 2[\text{log}(p(y|\bar{\theta}))-E_{post}(\text{log}(p(y|\theta)))]}.
}
\examples{
#Load post-processed data for patient GBM10
data("GBM10_postproc")

# Run Canopy2 to get list of phylogenetic trees corresponding to all chains
# and all subclones
get.trees.out<-get_trees(Rs=GBM10_postproc@Rs, Rb=GBM10_postproc@Rb,
                         Xs=GBM10_postproc@Xs, Xb=GBM10_postproc@Xb,
                         alpha=GBM10_postproc@param.est$alpha,
                         beta=GBM10_postproc@param.est$beta, kappa=1,
                         tau=999, Klist=4:6, niter=1000, nchains=5, thin=10,
                         pburn=0.1, seed=8675309)

# Examine diagnostic plots
get_diagnostics(get.trees.out, project=NULL, outpath=NULL)

# Get best tree across all chains and subclones via DIC
best.tree.out<-get_best_tree(get.trees.out)

best.tree.out

}
