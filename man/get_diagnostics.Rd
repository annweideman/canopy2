% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_diagnostics.R
\name{get_diagnostics}
\alias{get_diagnostics}
\title{Diagnostic Plots}
\usage{
get_diagnostics(get.trees.out, project = NULL, outpath = NULL)
}
\arguments{
\item{get.trees.out}{sample of phylogenetic trees output from function
\code{get_trees()} of class \code{get_trees}.}

\item{project}{a string specifying the project name to append to the filenames
when saving output. The final filenames for \code{get_diagnostics} output will
be "projectname_lagACF.pdf" (lag ACF plots), "projectname_posteriors.pdf"
(posterior densities), and "projectname_trace.pdf" (trace plots).}

\item{outpath}{a string specifying the location at which to save output
generated from \code{get_diagnostics}.}
}
\value{
For each K, generates graphical displays of the posterior densities, trace,
and lag ACF. These graphs can be viewed in R or exported to pdfs.
}
\description{
Plot posterior densities, trace, and lag autocorrelation factor (lag ACF)
associated with each number of subclones, K.
Requires output from function \code{get_trees()}.
}
\details{
Diagnostic plots are helpful for determining if there is evidence of
convergence within the MCMC chains and also to assess agreement of these
plots with the tree selected as opitmal from \code{\link[canopy2]{get_best_tree}}.

The posterior densities from the individual chains should ideally sit close
in space and each of the chains in the trace plots should be indistinguishable
except for random noise. The lag autocorrelation factor (lag ACF) should drop
to zero rather rapidly; large spikes that persist after lag 5 or 10 can be
indicative of strong within chain correlation (autocorrelation). A large
autocorrelation can imply that the sampling space is not properly explored
and can result in convergence to a local (rather than global) optimum or
convergence failure, altogether.
}
\examples{
#Load post-processed data for patient GBM10
data("GBM10_postproc")

# Run Canopy2 to get list of phylogenetic trees corresponding to all chains
# and all subclones
get.trees.out<-get_trees(Rs=GBM10_postproc@Rs, Rb=GBM10_postproc@Rb,
                         Xs=GBM10_postproc@Xs, Xb=GBM10_postproc@Xb,
                         alpha=GBM10_postproc@param.est$alpha,
                         beta=GBM10_postproc@param.est$beta, kappa=1,
                         tau=999, Klist=4:6, niter=1000, nchains=5, thin=10,
                         pburn=0.1, seed=8675309)

# Examine diagnostic plots
get_diagnostics(get.trees.out=get.trees.out, project=NULL, outpath=NULL)

}
