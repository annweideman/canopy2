% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/are_z_fun.R
\name{are_z_fun}
\alias{are_z_fun}
\title{Absolute Reconstruction Error for Z}
\usage{
are_z_fun(true.Z, inferred.Z)
}
\arguments{
\item{true.Z}{an object of class matrix representing the true clonal tree
configuration matrix, Z}

\item{inferred.Z}{an object of class matrix representing the inferred
clonal tree configuration matrix, Z}
}
\value{
A numeric representing the absolute reconstruction error associated with
inference of the clonal configuration matrix, Z.
}
\description{
Compute the absolute reconstruction error associated with inference of
the clonal configuration matrix, Z.
}
\details{
Please refer to Algorithm S3 in the manuscript text for details regarding
how the absolute reconstruction error is computed. In brief, the error for
Z is quantified by finding the minimum absolute distance between
the inference and all permutations of the truth by 1) computing the distance
metric, 2) computing extra error from additional columns, and 3) estimating
the ARE for each component as a combination of the error from steps 1) and 2).
}
\examples{

# Simulate read counts
sims.out<-simulate_data(N=15, S=2, M=5, alpha=0.1, beta=1, kappa=1, tau=999,
                       Ktrue=4, b.mindepth=30, b.maxdepth=50, sc.mindepth=80,
                       sc.maxdepth=120, scale=300, seed=8675309)

# Run Canopy2 to get list of phylogenetic trees corresponding to all chains
# and all subclones
get.trees.out<-get_trees(Rs=sims.out$Rs, Rb=sims.out$Rb,
                         Xs=sims.out$Xs, Xb=sims.out$Xb,
                         alpha=sims.out$alpha, beta=sims.out$beta,
                         kappa=1, tau=999, Klist=3:5,
                         niter=5000, nchains=3, thin=10, pburn=0.1,
                         seed=8675309)

# Get best tree across all chains and subclones via DIC
best.tree.out<-get_best_tree(get.trees.out)

# Compute absolute reconstruction error for Z
are_z_fun(true.Z=sims.out$true.tree$Z, inferred.Z=best.tree.out$tree$Z)

}
